plugins {
    id "com.github.hierynomus.license" version "0.15.0"
}

allprojects {

    group = 'org.opencypher'
    version = '0.2.3-SNAPSHOT'

}

subprojects {
    apply plugin: 'scala'
    apply plugin: 'maven-publish'

    task dependencySearch(type: DependencyInsightReportTask) {
        description 'Searches all projects for a dependency'
        group 'help'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile group: 'org.scala-lang', name: 'scala-library',  version: scalaVersionFull

        // Seems we need to lock these down, otherwise we get runtime errors on reflection
        compile group: 'org.scala-lang', name: 'scala-reflect',  version: scalaVersionFull
        compile group: 'org.scala-lang', name: 'scala-compiler', version: scalaVersionFull

        compile group: 'org.apache.logging.log4j', name: 'log4j-api',                     version: '2.11.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core',                    version: '2.11.0'
        compile group: 'org.apache.logging.log4j', name: "log4j-api-scala_$scalaVersion", version: '11.0'

        testCompile group: 'org.scalatest',      name: "scalatest_$scalaVersion",  version: '3.0.5'
        testCompile group: 'org.scalacheck',     name: "scalacheck_$scalaVersion", version: '1.13.5'
        testCompile group: 'org.junit.platform', name: 'junit-platform-runner',    version: '1.0.2'
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        options.encoding = 'UTF-8'
    }

    tasks.withType(ScalaCompile) {
        options.encoding = 'UTF-8'
        scalaCompileOptions.additionalParameters = [
                "-target:jvm-1.8",
                '-unchecked',
                '-deprecation',
                '-feature',
                '-Xfatal-warnings',
                '-Xfuture',
                '-Ywarn-adapted-args',
                '-Yopt-warnings:at-inline-failed',
                '-Yopt:l:project',
                '-Ypartial-unification',
        ]
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from(sourceSets.main.allSource)
    }
}

apply from: 'licenses.gradle'
apply from: 'publishing.gradle'


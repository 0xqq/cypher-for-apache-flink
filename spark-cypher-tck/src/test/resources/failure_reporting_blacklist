Feature "MiscellaneousErrorAcceptance": Scenario "Failing on incorrect unicode literal"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing on aggregation in WHERE"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing on aggregation in ORDER BY after RETURN"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing on aggregation in ORDER BY after WITH"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when not aliasing expressions in WITH"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when using undefined variable in pattern"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when using a path variable that is already bound"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when using a list as a node"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when using a variable length relationship as a single relationship"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when UNION has different columns"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when mixing UNION and UNION ALL"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when setting a list of maps as a property"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when multiple columns have the same name"
Feature "MiscellaneousErrorAcceptance": Scenario "Failing when using RETURN * without variables in scope"
Feature "SemanticErrorAcceptance": Scenario "Failing when returning an undefined variable"
Feature "SemanticErrorAcceptance": Scenario "Failing when comparing to an undefined variable"
Feature "SemanticErrorAcceptance": Scenario "Failing when using IN on a string literal"
Feature "SemanticErrorAcceptance": Scenario "Failing when using IN on an integer literal"
Feature "SemanticErrorAcceptance": Scenario "Failing when using IN on a float literal"
Feature "SemanticErrorAcceptance": Scenario "Failing when using IN on a boolean literal"
Feature "SemanticErrorAcceptance": Scenario "Failing when a node is used as a relationship"
Feature "SemanticErrorAcceptance": Scenario "Failing when a relationship is used as a node"
Feature "SemanticErrorAcceptance": Scenario "Failing when using `type()` on a node"
Feature "SemanticErrorAcceptance": Scenario "Failing when using `length()` on a node"
Feature "SemanticErrorAcceptance": Scenario "Failing when re-using a relationship in the same pattern"
Feature "SemanticErrorAcceptance": Scenario "Failing when using NOT on string literal"
Feature "SemanticErrorAcceptance": Scenario "Failing when using parameter as node predicate in MATCH"
Feature "SemanticErrorAcceptance": Scenario "Failing when using parameter as relationship predicate in MATCH"
Feature "SemanticErrorAcceptance": Scenario "Failing when using undefined variable in ON MATCH"
Feature "SemanticErrorAcceptance": Scenario "Failing when using MATCH after OPTIONAL MATCH"
Feature "SemanticErrorAcceptance": Scenario "Failing when float value is too large"
Feature "SemanticErrorAcceptance": Scenario "Handling property access on the Any type"
Feature "SemanticErrorAcceptance": Scenario "Failing when performing property access on a non-map 1"
Feature "SemanticErrorAcceptance": Scenario "Failing when performing property access on a non-map 2"
Feature "SemanticErrorAcceptance": Scenario "Failing when checking existence of a non-property and non-pattern"
Feature "SemanticErrorAcceptance": Scenario "Bad arguments for `range()`"
Feature "SemanticErrorAcceptance": Scenario "Fail for invalid Unicode hyphen in subtraction"
Feature "SemanticErrorAcceptance": Scenario "Failing for `size()` on paths"
Feature "SemanticErrorAcceptance": Scenario "Failing when using aggregation in list comprehension"
Feature "SemanticErrorAcceptance": Scenario "Failing when using non-constants in SKIP"
Feature "SemanticErrorAcceptance": Scenario "Failing when using negative value in SKIP"
Feature "SemanticErrorAcceptance": Scenario "Failing when using non-constants in LIMIT"
Feature "SemanticErrorAcceptance": Scenario "Failing when using negative value in LIMIT"
Feature "SemanticErrorAcceptance": Scenario "Failing when using floating point in LIMIT"
Feature "SemanticErrorAcceptance": Scenario "Failing when creating relationship without type"
Feature "SemanticErrorAcceptance": Scenario "Failing when merging relationship without type"
Feature "SemanticErrorAcceptance": Scenario "Failing when merging relationship without type, no colon"
Feature "SemanticErrorAcceptance": Scenario "Failing when creating relationship with more than one type"
Feature "SemanticErrorAcceptance": Scenario "Failing when merging relationship with more than one type"
Feature "SyntaxErrorAcceptance": Scenario "Using a non-existent function"
Feature "SyntaxErrorAcceptance": Scenario "Using `rand()` in aggregations"
Feature "SyntaxErrorAcceptance": Scenario "Supplying invalid hexadecimal literal 1"
Feature "SyntaxErrorAcceptance": Scenario "Supplying invalid hexadecimal literal 2"
Feature "VarLengthAcceptance": Scenario "Fail when asterisk operator is missing"
Feature "VarLengthAcceptance": Scenario "Fail on negative bound"
Feature "MatchAcceptance2": Scenario "Fail when using property access on primitive type"
Feature "ExpressionAcceptance": Scenario "Fail at runtime when attempting to index with an Int into a Map"
Feature "ExpressionAcceptance": Scenario "Fail at runtime when trying to index into a map with a non-string"
Feature "ExpressionAcceptance": Scenario "Fail at runtime when attempting to index with a String into a Collection"
Feature "ExpressionAcceptance": Scenario "Fail at runtime when trying to index into a list with a list"
Feature "ExpressionAcceptance": Scenario "Fail at compile time when attempting to index with a non-integer into a list"
Feature "ExpressionAcceptance": Scenario "Fail at runtime when trying to index something which is not a map or collection"
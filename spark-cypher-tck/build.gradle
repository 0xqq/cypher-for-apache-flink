
description = 'Cypher for Apache Spark - TCK'

sourceSets{
    generator{}
}

dependencies {
    testCompile project(':okapi-tck')
    testCompile project(':spark-cypher-testing')
    generatorCompile project(':okapi-tck')
    generatorCompile project(':spark-cypher-testing')
}

// split scenario name / key-words with | --> debugTCKScenarios -Pscenarios = 'sc1|sc2|..'
task debugTCKScenarios() {
    description 'Generates scala-test from TCK scenarios (keywords of the scenario names suffice)'
    group 'generator' 
    def outPath = project.findProperty('outPath') ?: 'src/test/scala/org/opencypher/spark/testing/'
    def resDir = project.findProperty('outPath') ?: 'src/test/resources'
    def scenarios = project.findProperty('scenarios') ?: ''
    dependsOn sourceSets.generator.runtimeClasspath
    doLast {
        javaexec {
            classpath =  sourceSets.generator.runtimeClasspath
            main = 'org.opencypher.spark.testing.AcceptanceTestGenerator'
            args = [outPath,resDir,scenarios]
        }
    }
}

description = 'Okapi - Neo4j IO test utils'

sourceSets {
    services {}
}

dependencies {
    compile project(':okapi-neo4j-io')
    compile project(':okapi-testing')

    compile group: 'org.bouncycastle', name: 'bctls-jdk15on', version: ver.bctls

    servicesCompile group: 'org.neo4j.test', name: 'neo4j-harness', version: '3.4.10' //ver.neo4j.main
}

task neo4jstart(type: ch.kk7.gradle.spawn.SpawnTask) {
    description "launches neo4j in a separate jvm"
    group "services"

    dependsOn sourceSets.services.runtimeClasspath
    def java = System.getProperty('java.home') + '/bin/java'
    def classpath = sourceSets.services.runtimeClasspath.collect { it.absolutePath }.join(':')
    def main = 'org.opencypher.testing.services.Neo4j'
    def marker = 'neo4j started'

    commandLine = [java, '-cp', classpath, main, marker]
    waitFor = marker
}

task neo4jstop(type: ch.kk7.gradle.spawn.KillTask) {
    description "stops neo4j in a separate jvm"
    group "services"
    kills tasks.neo4jstart
}

tasks.test.dependsOn(tasks.neo4jstart)
tasks.test.finalizedBy(tasks.neo4jstop)
